/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package bankUI.components.stock;

import Utils.Result;
import bankBackend.Config;
import bankBackend.entity.Stock;
import bankBackend.entity.User;
import bankBackend.service.SvcMgr;
import bankUI.utils.AlertUI;
import bankUI.utils.UIContextMgr;

import javax.swing.table.DefaultTableModel;
import java.util.List;

/**
 * @author NathanY
 */
public class StockNewUI extends javax.swing.JFrame {

    /**
     * Creates new form StockNewUI
     */
    private String uname = "";
    private DefaultTableModel marketModel = new DefaultTableModel();
    private DefaultTableModel userModel = new DefaultTableModel();

    public StockNewUI() {
        initComponents();
    }

    public void loadCtx() {
        User u = UIContextMgr.getUser(this);
        uname = u.getName();
        this.refreshBtnActionPerformed(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        stockNameF = new javax.swing.JTextField();
        amountF = new javax.swing.JTextField();
        buyBtn = new javax.swing.JButton();
        sellBtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        realizedField = new javax.swing.JLabel();
        refreshBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        stockTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        marketTable = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        unameLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Stock Name");

        jLabel2.setText("Amount");

        amountF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                amountFActionPerformed(evt);
            }
        });

        buyBtn.setText("Buy");
        buyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buyBtnActionPerformed(evt);
            }
        });

        sellBtn.setText("Sell");
        sellBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sellBtnActionPerformed(evt);
            }
        });

        jLabel3.setText("Stock UI");

        refreshBtn.setText("refresh");
        refreshBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshBtnActionPerformed(evt);
            }
        });

        stockTable.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{
                        {null, null, null, null, null},
                        {null, null, null, null, null},
                        {null, null, null, null, null},
                        {null, null, null, null, null}
                },
                new String[]{
                        "name", "price", "amount", "unrealized profit", "realized profit"
                }
        ));
        jScrollPane1.setViewportView(stockTable);

        marketTable.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{
                        {null, null, null},
                        {null, null, null},
                        {null, null, null},
                        {null, null, null}
                },
                new String[]{
                        "name", "price", "amount"
                }
        ));
        jScrollPane2.setViewportView(marketTable);

        jLabel4.setText("market");

        unameLabel.setText(uname);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(85, 85, 85)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(buyBtn)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                .addComponent(jLabel2)
                                                                .addComponent(jLabel1)))
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(sellBtn)
                                                                .addGap(0, 0, Short.MAX_VALUE))
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                        .addComponent(amountF, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                                                                        .addComponent(stockNameF))
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(layout.createSequentialGroup()
                                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                                .addComponent(realizedField)
                                                                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                                .addComponent(refreshBtn)
                                                                                .addGap(200, 200, 200))))))
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel3)
                                                .addContainerGap())))
                        .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(jLabel4)
                                                .addGap(90, 90, 90)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(jLabel7)
                                                .addGap(31, 31, 31)
                                                .addComponent(unameLabel)
                                                .addGap(205, 205, 205))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 479, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addContainerGap())))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jLabel4)
                                                        .addComponent(jLabel7)
                                                        .addComponent(unameLabel))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jLabel2)
                                                        .addComponent(amountF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(realizedField))
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jLabel1)
                                                        .addComponent(stockNameF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(26, 26, 26))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(refreshBtn)
                                                .addGap(34, 34, 34)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(buyBtn)
                                        .addComponent(sellBtn))
                                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void amountFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_amountFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_amountFActionPerformed

    class OPParams {
        String stockName;
        int amount;
        User user;

        OPParams(String stockName, int amount, User user) {
            this.stockName = stockName;
            this.amount = amount;
            this.user = user;
        }
    }

    private Result<OPParams> getOPParams() {
        String stockName = stockNameF.getText();
        int amount = 0;
        try {
            amount = Integer.parseInt(amountF.getText());
        } catch (NumberFormatException e) {
            return new Result<>(false, "Please enter a valid number", null);
        }
        if (amount <= 0) {
            return new Result<>(false, "Please enter a valid number", null);
        }
        if (stockName.equals("")) {
            return new Result<>(false, "Please enter a valid stock name", null);
        }
        User thisUser = UIContextMgr.getUser(this);
        return new Result<>(new OPParams(stockName, amount, thisUser));
    }

    private void buyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buyBtnActionPerformed
        // TODO add your handling code here:
        Result<OPParams> opParamsResult = getOPParams();
        if (!opParamsResult.success) {
            AlertUI.error(opParamsResult.msg);
            return;
        }
        Result r = SvcMgr.getStockService().buyStock(opParamsResult.data.stockName, opParamsResult.data.user, opParamsResult.data.amount);
        if (r.success) {
            AlertUI.success("Bought stock successfully");
            this.refreshBtnActionPerformed(evt);
        } else {
            AlertUI.error(r.msg);
        }

    }//GEN-LAST:event_buyBtnActionPerformed

    private void sellBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sellBtnActionPerformed
        // TODO add your handling code here:
        Result<OPParams> opParamsResult = getOPParams();
        if (!opParamsResult.success) {
            AlertUI.error(opParamsResult.msg);
            return;
        }
        Result r = SvcMgr.getStockService().sellStock(opParamsResult.data.stockName, opParamsResult.data.user, opParamsResult.data.amount);
        if (r.success) {
            AlertUI.success("Sold stock successfully");
            this.refreshBtnActionPerformed(evt);
        } else {
            AlertUI.error(r.msg);
        }
    }//GEN-LAST:event_sellBtnActionPerformed

    private void refreshBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshBtnActionPerformed
        // TODO add your handling code here:
        User thisUser = UIContextMgr.getUser(this);
        List<Stock> stocksMkt = SvcMgr.getStockService().listStocks(Config.STOCK_MANAGER_USER_ID);
        this.marketModel = new DefaultTableModel();
        this.marketModel.setColumnIdentifiers(new String[]{"Stock Name", "Price", "Amount"});
        for (Stock stock : stocksMkt) {
            this.marketModel.addRow(new Object[]{stock.getName(), stock.getCurrentPrice(), stock.getAmount()});
        }
        List<Stock> stockMe = SvcMgr.getStockService().listStocks(thisUser.getId());
        this.userModel = new DefaultTableModel();
        this.userModel.setColumnIdentifiers(new String[]{"Stock Name", "Price", "Amount", "unrealized profit", "realized profit"});
        for (Stock s : stockMe) {
            this.userModel.addRow(new Object[]{
                    s.getName(),
                    s.getBuyInPrice(),
                    s.getAmount(),
                    SvcMgr.getStockService().getUnrealizedProfit(s.getName(), thisUser).unwrap(),
                    SvcMgr.getStockService().getRealizedProfit(s.getName(), thisUser).unwrap()
            });
        }
        this.marketTable.setModel(this.marketModel);
        this.stockTable.setModel(this.userModel);

    }//GEN-LAST:event_refreshBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StockNewUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StockNewUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StockNewUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StockNewUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StockNewUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField amountF;
    private javax.swing.JButton buyBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable marketTable;
    private javax.swing.JLabel realizedField;
    private javax.swing.JButton refreshBtn;
    private javax.swing.JButton sellBtn;
    private javax.swing.JTextField stockNameF;
    private javax.swing.JTable stockTable;
    private javax.swing.JLabel unameLabel;
    // End of variables declaration//GEN-END:variables
}
